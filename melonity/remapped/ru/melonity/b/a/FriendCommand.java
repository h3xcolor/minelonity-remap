// —Ä–µ–º–∞–ø–∏–ª–∏ —Ä–µ–±—è—Ç–∞ –∏–∑ https://t.me/dno_rumine
package ru.melonity.b.a;

import java.util.List;
import net.fabricmc.api.EnvType;
import net.fabricmc.api.Environment;
import net.minecraft.client.MinecraftClient;
import net.minecraft.entity.Entity;
import net.minecraft.entity.player.PlayerEntity;
import net.minecraft.text.Text;
import net.minecraft.util.hit.EntityHitResult;
import net.minecraft.util.hit.HitResult;
import ru.melonity.Melonity;
import ru.melonity.b.Command;
import ru.melonity.b.CommandContext;
import ru.melonity.b.CommandHandler;
import ru.melonity.b.CommandSender;
import ru.melonity.b.FriendManager;

@Environment(EnvType.CLIENT)
public class FriendCommand implements CommandHandler, CommandHandler.Descriptor {

    @Override
    public List<Command> getCommands() {
        return List.of(
            new Command("friend clear", "–û—á–∏—Å—Ç–∏—Ç—å —Å–ø–∏—Å–æ–∫ –¥—Ä—É–∑–µ–π"),
            new Command("friend add <name>", "–î–æ–±–∞–≤–∏—Ç—å –¥—Ä—É–≥–∞ –ø–æ –Ω–∏–∫—É"),
            new Command("friend remove <name>", "–£–¥–∞–ª–∏—Ç—å –¥—Ä—É–≥–∞ –ø–æ –Ω–∏–∫—É"),
            new Command("friend raycast", "–î–æ–±–∞–≤–∏—Ç—å –¥—Ä—É–≥–∞ –Ω–∞ –∫–æ—Ç–æ—Ä–æ–≥–æ —Å–º–æ—Ç—Ä–∏—à—å")
        );
    }

    @Override
    public void handleCommand(CommandContext context, CommandSender sender) {
        FriendManager friendManager = Melonity.getFriendManager();
        String subCommand = context.getArgument(0).getValue();
        switch (subCommand) {
            case "clear":
                List<String> friends = friendManager.getFriends();
                if (friends.isEmpty()) {
                    sender.sendMessage("¬ßc–£ –≤–∞—Å –∏ –Ω–µ –±—ã–ª–æ –¥—Ä—É–∑–µ–π. –î–µ—Ä–∂–∏—Ç–µ –±–∞–Ω–∞–Ω —Å–æ—á—É—Å—Ç–≤–∏—è üçå");
                } else {
                    friendManager.clearFriends();
                    sender.sendMessage("¬ßa–£ –≤–∞—Å –±–æ–ª—å—à–µ –Ω–µ—Ç—É –¥—Ä—É–∑–µ–π");
                }
                break;
            case "add":
                String addName = context.getArgument(1).getValue();
                friendManager.addFriend(addName);
                sender.sendMessage("¬ßa–ò–≥—Ä–æ–∫ " + addName + " –¥–æ–±–∞–≤–ª–µ–Ω –≤ –¥—Ä—É–∑—å—è");
                break;
            case "remove":
                String removeName = context.getArgument(1).getValue();
                friendManager.removeFriend(removeName);
                sender.sendMessage("¬ßa–ò–≥—Ä–æ–∫ " + removeName + " —É–¥–∞–ª—ë–Ω –∏–∑ –¥—Ä—É–∑–µ–π");
                break;
            case "raycast":
                MinecraftClient client = MinecraftClient.getInstance();
                HitResult hitResult = client.crosshairTarget;
                if (!(hitResult instanceof EntityHitResult)) {
                    sender.sendMessage("¬ßc–ù–∞–≤–µ–¥–∏—Ç–µ—Å—å –Ω–∞ –∏–≥—Ä–æ–∫–∞");
                    return;
                }
                EntityHitResult entityHit = (EntityHitResult) hitResult;
                Entity entity = entityHit.getEntity();
                if (!(entity instanceof PlayerEntity)) {
                    String entityName = entity.getType().getName().getString();
                    sender.sendMessage("¬ßc–°—É—â–Ω–æ—Å—Ç—å " + entityName + " —ç—Ç–æ –Ω–µ –∏–≥—Ä–æ–∫");
                    return;
                }
                PlayerEntity player = (PlayerEntity) entity;
                String playerName = player.getName().getString();
                friendManager.addFriend(playerName);
                sender.sendMessage("¬ßa–ò–≥—Ä–æ–∫ " + playerName + " –¥–æ–±–∞–≤–ª–µ–Ω –≤ –¥—Ä—É–∑—å—è");
                break;
            default:
                throw new IllegalArgumentException("–¢–∞–∫–æ–π –æ–ø—Ü–∏–∏ –Ω–µ—Ç");
        }
    }

    @Override
    public String getCommandName() {
        return "friend";
    }

    @Override
    public String getDescription() {
        return "–í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –¥—Ä—É–∑—å—è–º–∏";
    }
}